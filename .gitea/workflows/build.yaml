on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: 'App version'
        required: true
        type: string
        default: 3.4.4
      dockerTag:
        description: 'Docker tag'
        required: true
        type: string
        default: 3.4.4
env:
  APP_VERSION: ${{ inputs.appVersion }}
  APP_NAME: n3n-docker
  DOCKER_TAG: ${{ inputs.dockerTag }}
  HTTP_PROXY: ${{vars.CLASH_HTTP_PROXY}}
  HTTPS_PROXY: ${{vars.CLASH_HTTP_PROXY}}
jobs:
  docker-build-arm64:
    runs-on: ubuntu-latest
    container:
      image: catthehacker/ubuntu:act-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            env.http_proxy=${{vars.CLASH_HTTP_PROXY}}
            env.https_proxy=${{vars.CLASH_HTTP_PROXY}}            
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{vars.REGISTRY_URL}}
          username: qibao
          password: ${{secrets.REGISTRY_PASSWORD}}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          provenance: false
          tags: ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:${{env.DOCKER_TAG}}-arm64
          build-args: URL=https://ghproxy.net/https://github.com/n42n/n3n/releases/download/${{env.APP_VERSION}}/n3n_${{env.APP_VERSION}}-1_arm64.deb

  docker-build-amd64:
    runs-on: ubuntu-latest
    container:
      image: catthehacker/ubuntu:act-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            env.http_proxy=${{vars.CLASH_HTTP_PROXY}}
            env.https_proxy=${{vars.CLASH_HTTP_PROXY}}            
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{vars.REGISTRY_URL}}
          username: qibao
          password: ${{secrets.REGISTRY_PASSWORD}}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          provenance: false
          tags: ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:${{env.DOCKER_TAG}}-amd64
          build-args: URL=https://ghproxy.net/https://github.com/n42n/n3n/releases/download/${{env.APP_VERSION}}/n3n_${{env.APP_VERSION}}-1_amd64.deb

  manifest-images:
    runs-on: ubuntu-latest
    needs: [docker-build-arm64, docker-build-amd64]
    container:
      image: catthehacker/ubuntu:act-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{vars.REGISTRY_URL}}
          username: qibao
          password: ${{secrets.REGISTRY_PASSWORD}}
      - name: Create and push manifest images
        uses: noelware/docker-manifest-action@master
        with:
          inputs: ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:${{env.DOCKER_TAG}}
          images: ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:${{env.DOCKER_TAG}}-arm64, ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:${{env.DOCKER_TAG}}-amd64
          push: true
      - name: Create and push manifest images (latest)
        if: env.APP_VERSION == env.DOCKER_TAG
        uses: noelware/docker-manifest-action@master
        with:
          inputs: ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:latest
          images: ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:${{env.DOCKER_TAG}}-arm64, ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:${{env.DOCKER_TAG}}-amd64
          push: true
  sync-docker-hub:
    runs-on: ubuntu-latest
    needs: [manifest-images]
    container:
      image: catthehacker/ubuntu:act-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: chenweiwen
          password: ${{secrets.DOCKER_HUB_PASSWORD}}
      - name: Sync Docker Hub
        run: |
          docker buildx imagetools create \
            --tag chenweiwen/${{env.APP_NAME}}:${{env.DOCKER_TAG}} \
            ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:${{env.DOCKER_TAG}}
      - name: Sync Docker Hub (latest)
        if: env.APP_VERSION == env.DOCKER_TAG
        run: |
          docker buildx imagetools create \
            --tag chenweiwen/${{env.APP_NAME}}:latest \
            ${{vars.REGISTRY_URL}}/qibao/${{env.APP_NAME}}:latest